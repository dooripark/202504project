package com.example.ioc.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.EnableAspectJAutoProxy;
import org.springframework.transaction.annotation.EnableTransactionManagement;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;

import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;
import org.springframework.orm.jpa.JpaVendorAdapter;

import org.springframework.jdbc.datasource.DriverManagerDataSource;

import javax.annotation.PreDestroy;
import javax.persistence.EntityManagerFactory;
import javax.sql.DataSource;

import com.mysql.cj.jdbc.AbandonedConnectionCleanupThread;

@Configuration
@ComponentScan(basePackages = "com.example.ioc")
@EnableAspectJAutoProxy
@EnableTransactionManagement
@EnableJpaRepositories(basePackages = "com.example.ioc.repository")
public class AppConfig {

    // ‚úÖ DataSource ÏÑ§Ï†ï
    @Bean
    public DataSource dataSource() {
        DriverManagerDataSource dataSource = new DriverManagerDataSource();
        dataSource.setDriverClassName("com.mysql.cj.jdbc.Driver");
        dataSource.setUrl("jdbc:mysql://localhost:3306/boarddb?useSSL=false&serverTimezone=Asia/Seoul");
        dataSource.setUsername("root");
        dataSource.setPassword("tmvkdlejaos12@");
        return dataSource;
    }

    // ‚úÖ JPA Vendor Adapter ÏÑ§Ï†ï
    @Bean
    public JpaVendorAdapter jpaVendorAdapter() {
        return new HibernateJpaVendorAdapter();
    }

    // ‚úÖ EntityManagerFactory ÏÑ§Ï†ï (BoardEntity Ìè¨Ìï® Í≤ΩÎ°ú Ïä§Ï∫î)
    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactory() {
        LocalContainerEntityManagerFactoryBean emf = new LocalContainerEntityManagerFactoryBean();
        emf.setDataSource(dataSource());
        emf.setPackagesToScan("com.example.ioc.domain", "com.example.ioc.entity"); // üî• Ïó¨Í∏∞ Ï§ëÏöî!
        emf.setJpaVendorAdapter(jpaVendorAdapter());
        return emf;
    }

    // ‚úÖ Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†Ä ÏÑ§Ï†ï
    @Bean
    public JpaTransactionManager transactionManager(EntityManagerFactory emf) {
        return new JpaTransactionManager(emf);
    }

    // ‚úÖ MySQL Ïª§ÎÑ•ÏÖò ÌÅ¥Î¶∞ÏóÖ
    @PreDestroy
    public void cleanup() {
        try {
            AbandonedConnectionCleanupThread.checkedShutdown();
        } catch (Exception e) {
            System.out.println("AbandonedConnectionCleanupThread shutdown failed: " + e.getMessage());
        }

        try {
            Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
        } catch (Exception e) {
            System.out.println("JDBC Driver shutdown failed: " + e.getMessage());
        }
    }
}
